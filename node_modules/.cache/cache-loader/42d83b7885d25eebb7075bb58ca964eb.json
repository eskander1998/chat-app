{"remainingRequest":"C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\src\\components\\Chat.vue","dependencies":[{"path":"C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\src\\components\\Chat.vue","mtime":1663851729724},{"path":"C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\.babelrc","mtime":1663844334567},{"path":"C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1663844369426},{"path":"C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Skander\\Desktop\\edtake\\chat-edtake\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:\\\\Users\\\\Skander\\\\Desktop\\\\edtake\\\\chat-edtake\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport io from 'socket.io-client';\nimport EmojiPicker from 'vue-emoji-picker';\nexport default {\n  data: function data() {\n    return {\n      user: '',\n      message: '',\n      messages: [],\n      socket: io('localhost:3001'),\n      search: ''\n    };\n  },\n  methods: {\n    sendMessage: function sendMessage(e) {\n      e.preventDefault();\n      console.log(this.message);\n      console.log(this.user);\n\n      if (this.user !== null || this.message !== null) {\n        this.socket.emit('SEND_MESSAGE', {\n          user: this.user,\n          message: this.message\n        });\n        this.message = '';\n      } else {\n        alert(\"aaaaaa\");\n      }\n    },\n    append: function append(emoji) {\n      this.message += emoji;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.socket.on('MESSAGE', function (data) {\n      _this.messages = _toConsumableArray(_this.messages).concat([data]); // you can also do this.messages.push(data)\n    });\n  },\n  components: {\n    EmojiPicker: EmojiPicker\n  },\n  directives: {\n    focus: {\n      inserted: function inserted(el) {\n        el.focus();\n      }\n    }\n  }\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AAEA;wBAEA;;YAEA;eACA;gBACA;iBACA;cAEA,AACA;AAPA;AAQA;;yCAEA;QAEA;uBACA;uBAGA;;iDACA,MACA;;qBAEA;wBACA,AACA;AAHA;uBAIA;AACA,aAEA;cACA;AACA;AACA;mCACA;sBACA;AACA,AACA;AAxBA;;AAyBA;;8CACA;kEACA,QACA;AACA;AACA;;AAEA,AACA;AAFA;;;sCAKA;WACA;AACA,AACA,AAEA;AANA;AADA;AA7CA","file":"Chat.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"card mt-3\">\r\n      <div class=\"card-body\">\r\n          <div class=\"card-title\">\r\n              <h3 >Chat app</h3>\r\n              <hr>\r\n          </div>\r\n          <div class=\"card-body\">\r\n              <div class=\"messages\" v-for=\"(msg, index) in messages\" :key=\"index\">\r\n                  <p><span class=\"font-weight-bold\" style=\"color:#00548B;\">{{ msg.user }}: </span>{{ msg.message }}</p>\r\n                 \r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n              <div class=\"gorm-group\">\r\n                  <label for=\"user\">User:</label>\r\n                  <input type=\"text\" v-model=\"user\" class=\"form-control\">\r\n              </div>\r\n              <div class=\"gorm-group pb-3\" >\r\n                  <label for=\"message\">Message:</label>\r\n\r\n                  <div class=\"wraaper \">\r\n                  <textarea v-model=\"message\" class=\"form-control\" />\r\n                  <emoji-picker @emoji=\"append\" :search=\"search\">\r\n            \r\n            <button\r\n            class=\"emoji-invoker\"\r\n            slot=\"emoji-invoker\"\r\n            slot-scope=\"{ events: { click: clickEvent } }\"\r\n            @click.stop=\"clickEvent\"\r\n          >\r\n             <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 fill-current text-grey\">\r\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z\"/>\r\n            </svg>\r\n          </button>\r\n    \r\n          <div slot=\"emoji-picker\" slot-scope=\"{ emojis, insert, display }\">\r\n            <div class=\"emoji-picker\" :style=\"{ top: display.y + 'px', left: display.x + 'px' }\">\r\n              <div class=\"emoji-picker__search\">\r\n                <input type=\"text\" v-model=\"search\" v-focus>\r\n              </div>\r\n              <div>\r\n                <div v-for=\"(emojiGroup, category) in emojis\" :key=\"category\">\r\n                  <h5>{{ category }}</h5>\r\n                  <div class=\"emojis\">\r\n                    <span\r\n                      v-for=\"(emoji, emojiName) in emojiGroup\"\r\n                      :key=\"emojiName\"\r\n                      @click=\"insert(emoji)\"\r\n                      :title=\"emojiName\"\r\n                    >{{ emoji }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </emoji-picker>\r\n                     </div>\r\n              </div>\r\n            \r\n       \r\n              <button type=\"submit\" class=\"btn\" style=\"background-color:#00548B; color: aliceblue;\" @click=\"sendMessage\">Send Message </button>\r\n\r\n       \r\n\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\nimport EmojiPicker from 'vue-emoji-picker'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            user: '',\r\n            message: '',\r\n            messages: [],\r\n            socket : io('localhost:3001'),\r\n            search: '',\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        sendMessage(e) {\r\n            e.preventDefault();\r\n            \r\n        console.log(this.message);\r\n        console.log(this.user);\r\n\r\n\r\n            if(this.user!== null || this.message !== null)\r\n            {\r\n            this.socket.emit('SEND_MESSAGE', {\r\n                user: this.user,\r\n                message: this.message\r\n            });\r\n            this.message = ''\r\n        }\r\n        else {\r\n            \r\n            alert(\"aaaaaa\")\r\n    }\r\n        },\r\n        append(emoji) {\r\n      this.message += emoji\r\n    },\r\n    },\r\n    mounted() {\r\n        this.socket.on('MESSAGE', (data) => {\r\n            this.messages = [...this.messages, data];\r\n            // you can also do this.messages.push(data)\r\n        });\r\n    },\r\n    components: {\r\n    EmojiPicker,\r\n  },\r\n  directives: {\r\n    focus: {\r\n      inserted(el) {\r\n        el.focus()\r\n      },\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.regular-input {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 3px;\r\n  border: 1px solid #ccc;\r\n  width: 20rem;\r\n  height: 12rem;\r\n  outline: none;\r\n}\r\n\r\n.regular-input:focus {\r\n  box-shadow: 0 0 0 3px rgba(66,153,225,.5);\r\n}\r\n\r\n.emoji-invoker {\r\n  /* position: absolute; */\r\n  top: 0.5rem;\r\n  right: 0.5rem;\r\n  width: 1.5rem;\r\n  height: 1.5rem;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  padding: 0;\r\n  background: transparent;\r\n  border: 0;\r\n}\r\n.emoji-invoker:hover {\r\n  transform: scale(1.1);\r\n}\r\n.emoji-invoker > svg {\r\n  fill: #b1c6d0;\r\n}\r\n\r\n.emoji-picker {\r\n  position: absolute;\r\n  z-index: 1;\r\n  font-family: Montserrat;\r\n  border: 1px solid #ccc;\r\n  width: 15rem;\r\n  height: 20rem;\r\n  overflow: scroll;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n  border-radius: 0.5rem;\r\n  background: #fff;\r\n  box-shadow: 1px 1px 8px #c7dbe6;\r\n}\r\n.emoji-picker__search {\r\n  display: flex;\r\n}\r\n.emoji-picker__search > input {\r\n  flex: 1;\r\n  border-radius: 10rem;\r\n  border: 1px solid #ccc;\r\n  padding: 0.5rem 1rem;\r\n  outline: none;\r\n}\r\n.emoji-picker h5 {\r\n  margin-bottom: 0;\r\n  color: #b1b1b1;\r\n  text-transform: uppercase;\r\n  font-size: 0.8rem;\r\n  cursor: default;\r\n}\r\n.emoji-picker .emojis {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n.emoji-picker .emojis:after {\r\n  content: \"\";\r\n  flex: auto;\r\n}\r\n.emoji-picker .emojis span {\r\n  padding: 0.2rem;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n.emoji-picker .emojis span:hover {\r\n  background: #ececec;\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n"]}]}